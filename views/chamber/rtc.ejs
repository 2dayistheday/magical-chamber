<!DOCTYPE HTML>
<html lang="kr">
<head>
    <title><%title%></title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
</head>
<body class="landing">

    <h1 class="make-center"><%= chamber[0].chamber_name %></h1>

    <hr />

    <section class="make-center">

        <!-- RTC Start -->
        <div id="videos-container"></div>
        <!-- RTC End -->

        <!-- Etherpad & Canvas Start -->
        <div id="innerpart">
            <h1>PAIR DOCS + PAIR CANVAS!</h1>
            <div id="tools">
                <div id="docs" style="float:left"></div>
                <div id="cv" style="float:left"></div>
            </div>
        </div>
        <!-- Etherpad & Canvas End -->

        <!-- Text Chatting & File Sharing Start -->
        <input type="text" id="input-text-chat" placeholder="Enter Text Chat">
        <br>
        <form action="upload/file" method="post" enctype="multipart/form-data" id="fileForm">
        </form>
        <button id="share-file">Share File</button>
        <!--<input type="text" id="filePath">-->

        <div id="chat-container">
            <div id="file-container"></div>
            <div class="chat-output"></div>
        </div>
        <!-- Text Chatting & File Sharing End -->


    </section>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/webrtc-adapter/6.0.1/adapter.js"></script>
    <script src="https://code.jquery.com/jquery-latest.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/javascripts/ChamberTools.js"></script>
    <script src="/javascripts/dev/CodecsHandler.js"></script>
    <script src="/javascripts/dev/DetectRTC.js"></script>
    <script src="/javascripts/dev/FileBufferReader.js"></script>
    <script src="/javascripts/dev/getHTMLMediaElement.js"></script>
    <script src="/javascripts/dev/getUserMedia.js"></script>
    <script src="/javascripts/dev/globals.js"></script>
    <script src="/javascripts/dev/IceServersHandler.js"></script>
    <script src="/javascripts/dev/OnIceCandidateHandler.js"></script>
    <script src="/javascripts/dev/RTCMultiConnection.js"></script>
    <script src="/javascripts/dev/RTCPeerConnection.js"></script>
    <script src="/javascripts/dev/StreamsHandler.js"></script>
    <script src="/javascripts/dev/TextSenderReceiver.js"></script>

    <!-- RTC Client JavaScript Code -->
    <script>

        // 파일 공유(FileBufferReader.js)
        document.getElementById('share-file').onclick = function() {
            var fileSelector = new FileSelector();
            fileSelector.selectSingleFile(function(file) {
                connection.send(file);
            });
        };
        // 채팅창
        document.getElementById('input-text-chat').onkeyup = function(e) {
            if (e.keyCode != 13) return;  // 엔터 누르면 리턴
            // removing trailing/leading whitespace
            this.value = this.value.replace(/^\s+|\s+$/g, '');
            if (!this.value.length) return;
            connection.send(this.value);
            appendDIV(this.value);
            this.value = '';
        };

        var chatContainer = document.querySelector('.chat-output');

        // 채팅문구를 화면에 표시
        function appendDIV(event) {
            var div = document.createElement('div');
            div.innerHTML = (event.userid || connection.userid) + ': ' + (event.data || event);
            chatContainer.insertBefore(div, chatContainer.firstChild);
            div.tabIndex = 0;
            div.focus();
            document.getElementById('input-text-chat').focus();
        }

        // RTCMultiConnection Code
        var connection = new RTCMultiConnection();
        connection.autoCloseEntireSession = false;
        connection.userid = '<%= profile[0].user_nickname %>';
        connection.socketURL = '/';
        connection.socketMessageEvent = 'RTC';
        var roomid = '<%= chamber[0].chamber_name %>';

        connection.openOrJoin(roomid, function(isRoomExists, roomid) {
            if (!isRoomExists) {
                console.log('방 오픈!');
            }
        });

        connection.enableFileSharing = true;
        connection.session = {
            audio: true,
            video: true,
            data: true
        };
        connection.sdpConstraints.mandatory = {
            OfferToReceiveAudio: true,
            OfferToReceiveVideo: true
        };
        connection.videosContainer = document.getElementById('videos-container');
        connection.onstream = function(event) {
            event.mediaElement.id = event.userid;
            connection.videosContainer.appendChild(event.mediaElement);
            event.mediaElement.play();
            setTimeout(function() {
                event.mediaElement.play();
            }, 5000);
        };
        connection.onstreamended = connection.onleave = connection.onclose = function(event) {
            var video = document.getElementById(event.userid);
            if(!video) return;
            video.parentNode.removeChild(video);

            if (!connection.getAllParticipants().length) {
                document.querySelector('h1').innerHTML = '계속 ' + connection.getAllParticipants().join(' ') + '와 연결되어 있습니다.';
            } else {
                document.querySelector('h1').innerHTML = '나 혼자 남았네요...ㅠ';
                $.post('add/log', {log_msg: '그룹 콜 종료'});
            }
        };

        connection.onmessage = appendDIV;
        connection.filesContainer = document.getElementById('file-container');
        connection.onopen = function() {
            document.getElementById('share-file').disabled = false;
            document.getElementById('input-text-chat').disabled = false;
        };

        // Handling Room-ID
        (function() {
            var params = {},
                r = /([^&=]+)=?([^&]*)/g;
            function d(s) {
                return decodeURIComponent(s.replace(/\+/g, ' '));
            }
            var match, search = window.location.search;
            while (match = r.exec(search.substring(1)))
                params[d(match[1])] = d(match[2]);
            window.params = params;
        })();
        var roomid = '';
        if (localStorage.getItem(connection.socketMessageEvent)) {
            roomid = localStorage.getItem(connection.socketMessageEvent);
        } else {
            roomid = connection.token();
        }
        var hashString = location.hash.replace('#', '');
        if(hashString.length && hashString.indexOf('comment-') == 0) {
            hashString = '';
        }
        var roomid = params.roomid;
        if(!roomid && hashString.length) {
            roomid = hashString;
        }
        if(roomid && roomid.length) {
            // auto-join-room
            (function reCheckRoomPresence() {
                connection.checkPresence(roomid, function(isRoomExists) {
                    if(isRoomExists) {
                        document.getElementById('join-room').onclick();
                        return;
                    }
                    setTimeout(reCheckRoomPresence, 5000);
                });
            })();
            disableInputButtons();
        }
    </script>
    <!-- RTC Client JavaScript Code End -->

    <!-- Etherpad & Canvas Javascript Code Start -->
    <script type="text/javascript">
        $('#docs').pad({'showChat':'false'});
        $('#cv').canvas();
    </script>
    <!-- Etherpad & Canvas Javascript Code Start -->

</body>
</html>
